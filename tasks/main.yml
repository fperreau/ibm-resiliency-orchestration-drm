---
##
# IBM Resiliency Orchestration DRM role
#
# Author: F.PERREAU
##

#
# Common Linux configuration
#
- name: COMMON LINUX CONFIGURATION
  include_tasks: common.yml

#
# Configure BUILD server environment
#
- name: CREATE BUILD DIRECTORY
  file:
    path: "{{ BUILD }}"
    state: directory
- name: COPY BINARY FILES
  unarchive:
    src: "{{ FILES }}/{{ item.archive }}"
    dest: "{{ BUILD }}"
    owner: root
    group: root
    mode: "o-xwr"
    creates: "{{ BUILD }}/{{ item.creates }}"
  with_items: "{{ BINARY_FILES }}"
- name: COPY BINARY FILES EL8
  unarchive:
    src: "{{ FILES }}/{{ item.archive }}"
    dest: "{{ BUILD }}"
    owner: root
    group: root
    mode: "o-xwr"
    creates: "{{ BUILD }}/{{ item.creates }}"
  with_items: "{{ BINARY_FILES_EL8 }}"
  when: drm_os == "el8"
- name: COPY BINARY FILES EL7
  unarchive:
    src: "{{ FILES }}/{{ item.archive }}"
    dest: "{{ BUILD }}"
    owner: root
    group: root
    mode: "o-xwr"
    creates: "{{ BUILD }}/{{ item.creates }}"
  with_items: "{{ BINARY_FILES_EL7 }}"
  when: drm_os == "el7"
- name: COPY TEMPLATE FILES
  template:
    src: "{{ item }}"
    dest: "{{ BUILD }}/{{ item }}"
  with_items: "{{ TEMPLATE_FILES }}"

#
# Install MariaDB server
#
- name: INSTALL EL8 MARIADB SERVER
  package:
    name: "{{ MARIADB_PKG_EL8 }}"
    state: present
  when: drm_os == "el8"
- name: INSTALL EL7 MARIADB SERVER
  package:
    name: "{{ MARIADB_PKG_EL7 }}"
    state: present
  when: drm_os == "el7"
- name: CONFIGURE MY.CNF
  copy:
    src: "{{ BUILD }}/my_drm.cnf"
    dest: "/etc/my.cnf"
    remote_src: true
    backup: true
- name: START MARIADB
  service:
    name: mariadb
    state: started
    enabled: true
- name: SET SQL ROOT PASSWORD
  shell: |
    mysqladmin -u root password '{{ sql_pass }}' &&
    echo 'MariaDB Root password' > {{ BUILD }}/SetSQLRootPassword.lck
  args:
    creates: "{{ BUILD }}/SetSQLRootPassword.lck"

#
# Install Apache TOMCAT
#
- name: INSTALL APACHE TOMCAT
  unarchive:
    src: "{{ TOMCAT_PKG }}"
    dest: /opt
    remote_src: true
    creates: "{{ TOMCAT_HOME }}"
- name: RENAME APACHE TOMCAT HOME
  command: mv /opt/{{ TOMCAT_SRC }} {{ TOMCAT_HOME }}
  args:
    creates: "{{ TOMCAT_HOME }}"

#
# Install Resiliency Orchestration DRM
#
- name: INSTALL PANACES
  command: "{{ BUILD }}/install.bin -f {{ BUILD }}/PanacesServerInstaller.properties"
  args:
    chdir: "{{ BUILD }}"
    creates: "{{ EAMSROOT }}"

#
# Install Third PARTY software
#
- name: "INSTALL ThirdPartyJSLib TO {{ item }}/ThirdPartyJSLib/"
  unarchive:
    src: "{{ THIRDPARTY_JSLIB }}"
    dest: "{{ item }}"
    owner: tomcatuser
    group: tomcatusergroup
    remote_src: true
    creates: "{{ item }}/calendar.js"
  with_items:
    - "{{ TOMCAT_HOME }}/webapps/PanacesGUI/scripts"
- name: "COPY ThirPartyJSLib TO {{ item }}"
  copy:
    src: "{{ item }}/ThirdPartyJSLib/"
    dest: "{{ item }}"
    owner: tomcatuser
    group: tomcatusergroup
    remote_src: true
  with_items:
    - "{{ TOMCAT_HOME }}/webapps/PanacesGUI/scripts"
- name: INSTALL GNULIB JSON IN PANACES
  unarchive:
    src: "{{ THIRDPARTY_GNULIB }}"
    dest: "{{ item }}"
    owner: tomcatuser
    group: tomcatusergroup
    mode: "0775"
    remote_src: true
    creates: "{{ item }}/json-20180813.jar"
  with_items:
    - "{{ TOMCAT_HOME }}/webapps/PanacesGUI/WEB-INF/lib"
    - "{{ EAMSROOT }}/lib"

#
# Install BIRT software
#
- name: Copy 'birt/WebViewerExample' to '{{ TOMCAT_HOME }}/webapps/birt'.
  command: cp -r {{ BUILD }}/birt-runtime-4_3_2/WebViewerExample birt
  args:
    chdir: "{{ TOMCAT_HOME }}/webapps"
    creates: "{{ TOMCAT_HOME }}/webapps/birt"
- name: Copy 'connection_profile_dashboardâ€™,'*.rptdesign','mariadb-java-client-2.3.0.jar' to 'birt'.
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: true
  with_items:
    - { src: "{{ TOMCAT_HOME }}/webapps/PanacesGUI/report/connection_profile_dashboard",
        dest: "{{ TOMCAT_HOME }}/webapps/birt",
        creates: "connection_profile_dashboard" }
    - { src: "{{ TOMCAT_HOME }}/webapps/PanacesGUI/report/",
        dest: "{{ TOMCAT_HOME }}/webapps/birt/report",
        creates: "PDF_report.rptdesign" }
    - { src: "{{ TOMCAT_HOME }}/webapps/PanacesGUI/WEB-INF/lib/mariadb-java-client-2.3.0.jar",
        dest: "{{ TOMCAT_HOME }}/webapps/birt/WEB-INF/lib",
        creates: "mariadb-java-client-2.3.0.jar" }
- name: Set tomcatuser:tomcatusergroup owner file for '{{ TOMECAT_HOME }}/webapps/birt'.
  file:
    path: "{{ TOMCAT_HOME }}/webapps/birt"
    recurse: true
    owner: tomcatuser
    group: tomcatusergroup

#
# Secure Panaces Tomcat
#
- name: CHANGE TOMCAT CONFIGURATION
  copy:
    src: "{{ BUILD }}/tomcat_conf_server.xml"
    dest: "{{ TOMCAT_HOME }}/conf/server.xml"
    mode: "0640"
    owner: tomcatuser
    group: tomcatusergroup
    remote_src: true
    backup: true

#
# Configure Panaces service
#
- name: SYSTEMCTL PANACES SERVICE
  copy:
    src: "{{ BUILD }}/{{ item }}"
    dest: "/etc/systemd/system/{{ item }}"
    remote_src: true
  with_items:
    - panaces.service
- name: RELOAD SYSTEM SERVICE DB
  systemd:
    daemon_reload: true
- name: ENABLE PANACES SERVICE
  systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  with_items:
    - panaces.service

#
# Create Backup Panaces location
#
- name: CREATE BACKUP PANACES LOCATION
  file:
    path: /opt/backup
    owner: panacesuser
    group: "panacesusergroup"
    state: directory

#
# Install Co-Hosted Site Controller
#
- include_tasks: agent_node.yml
  when: drm_mode == "cohosted"
