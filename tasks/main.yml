---
##
# IBM Resiliency Orchestration DRM role
#
# Author: F.PERREAU
##

#
# Configure BUILD server environment
#
- name: CREATE BUILD DIRECTORY
  file:
    path: "{{ BUILD }}"
    state: directory
- name: COPY BINARY FILES
  unarchive:
    src:      "{{ FILES }}/{{ item.archive }}"
    dest:     "{{ BUILD }}"
    owner:    root
    group:    root
    mode:     "o-xwr"
    creates:  "{{ BUILD }}/{{ item.creates }}"
  with_items: "{{ BINARY_FILES }}"
- name: COPY TEMPLATE FILES
  template:
    src: "{{ item }}"
    dest: "{{ BUILD }}/{{ item }}"
  with_items: "{{ TEMPLATE_FILES }}"

#
# Install MariaDB server
#
- name: INSTALL MARIADB SERVER
  dnf:
    name: "{{ MARIADB_PKG }}"
    state: present
- name: CONFIGURE MY.CNF
  copy:
    src: "{{ BUILD }}/my_drm.cnf"
    dest: "/etc/my.cnf"
    remote_src: yes
    backup: yes
- name: START MARIADB
  service:
    name: mariadb
    state: started
    enabled: yes
- name: SET SQL ROOT PASSWORD
  shell: mysqladmin -u root password '{{ sql_pass }}' && echo 'MariaDB Root password' > /root/SetSQLRootPassword.lck
  args:
    creates: "/root/SetSQLRootPassword.lck"

#
# Install Apache TOMCAT
#
- name: INSTALL APACHE TOMCAT
  unarchive:
    src: "{{ TOMCAT_PKG }}"
    dest: /opt
    remote_src: yes
    creates: "{{ TOMCAT_HOME }}"
  register: install_tomcat
- name: RENAME APACHE TOMCAT HOME
  command: mv "/opt/{{ TOMCAT_SRC }}" "{{ TOMCAT_HOME }}"
  args:
    creates: "{{ TOMCAT_HOME }}"
  when: install_tomcat.changed

#
# Install Resiliency Orchestration DRM
#
- name: INSTALL PANACES
  command: ./install.bin -f PanacesServerInstaller.properties
  args:
    chdir: "{{ BUILD }}"
    creates: "{{ EAMSROOT }}"
  register: result

#
# Install Third PARTY software
#
- name: "INSTALL ThirdPartyJSLib TO {{ item }}/ThirdPartyJSLib/"
  unarchive:
    src: "{{ THIRDPARTY_JSLIB }}"
    dest: "{{ item }}"
    owner: tomcatuser
    group: tomcatusergroup
    remote_src: yes
    creates: "{{ item }}/ThirdPartyJSLib/calendar.js"
  with_items:
  - "{{ TOMCAT_HOME }}/webapps/PanacesGUI/scripts"
  register: install_thirdparty
- name: "COPY ThirPartyJSLib TO {{ item }}"
  copy:
    src: "{{ item }}/ThirdPartyJSLib/"
    dest: "{{ item }}"
    owner: tomcatuser
    group: tomcatusergroup
    remote_src: yes
  with_items:
   - "{{ TOMCAT_HOME }}/webapps/PanacesGUI/scripts"
  when: install_thirdparty.changed
- name: INSTALL GNULIB JSON IN PANACES
  unarchive:
    src: "{{ THIRDPARTY_GNULIB }}"
    dest: "{{ item }}"
    owner: tomcatuser
    group: tomcatusergroup
    mode:  "0775"
    remote_src: yes
    creates: "{{ item }}/json-20180813.jar"
  with_items:
  - "{{ TOMCAT_HOME }}/webapps/PanacesGUI/WEB-INF/lib"
  - "{{ EAMSROOT }}/lib"

#
# Secure PANACES TOMCAT
#
- name: CHANGE TOMCAT CONFIGURATION
  copy:
    src: "{{ BUILD }}/tomcat_conf_server.xml"
    dest: "{{ TOMCAT_HOME }}/conf/server.xml"
    mode: "0640"
    owner: tomcatuser
    group: tomcatusergroup
    remote_src: yes
    backup: yes

#
# Configure PANACES service
#
- name: SYSTEMCTL PANACES SERVICE
  copy:
    src: "{{ BUILD }}/{{ item }}"
    dest: "/etc/systemd/system/{{ item }}"
    remote_src: yes
  register: result
  with_items:
  - panaces.service
- name: RELOAD SYSTEM SERVICE DB
  systemd:
    daemon_reload: yes
- name: ENABLE PANACES SERVICE
  systemd:
    name: panaces
    state: started
    enabled: yes

#
# Create BACKUP PANACES location
#
- name: CREATE BACKUP PANACES LOCATION
  file:
    path:  /opt/backup
    owner: panacesuser
    group: "panacesusergroup"
    state: directory
